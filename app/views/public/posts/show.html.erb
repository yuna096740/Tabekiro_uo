<div class="container my-5">
  <div class="row">
    <div class="col-md-9">
      <h4>お裾分け詳細</h4>
      <div class="text-center">
        <%= image_tag @post.post_image, size: "400x350" %>
      </div>

      <table class="table table-borderless">
        <tr>
          <th class="col-2">タイトル</th>
          <td><%= @post.title %></td>
        </tr>

        <tr>
          <th>紹介</th>
          <td><%= @post.introduction %></td>
        </tr>

        <tr>
          <th>取引期限</th>
          <td id="timeLimit">
            あと
            <span class="hour"></span>時間
            <span class="min"></span>分
            <span class="sec"></span>秒です。
          </td>
          <td id="hideLimit">
            取引は終了しました。
          </td>
        </tr>

        <tr>
          <th></th>
          <td></td>
        </tr>
      </table>
      <div class="text-right">
        <% if current_member %>
          <%= link_to '編集する', edit_post_path(@post), class:"btn btn-success px-5" %>
          <%= link_to '削除する', post_path(@post), method: :delete, data: { confirm: "本当によろしいですか？"}, class:"btn btn-danger px-5" %>
        <% end %>
      </div>
    </div>

    <div class="col-md-3 mt-5">
      <table class="table table-bordered">
        <thead class="bg-light">
          <tr>
            <th>コメント数 :</th>
          </tr>
        </thead>

        <tbody class="chat-height">
          <tr>
            <td></td>
          </tr>
        </tbody>

        <thead>
          <tr>
            <th>コメント蘭:: <ボタン></th>
          </tr>
        </thead>
      </table>
    </div>
  </div>
  <div class="row mt-3 mb-5">
    <div class="col-md-10 mx-auto mb-5">
      <div id="map" class="mapShow"></div>
    </div>
  </div>
</div>
<script>
  const elmHour = document.querySelector(".hour");
  const elmMin  = document.querySelector(".min");
  const elmSec  = document.querySelector(".sec");

  const rewriteTime = () => {
    const now = new Date();
    //
    const postCreatedAt = new Date("<%= @post.created_at.iso8601 %>");
    const limit = <%= @post.limit %>
    const limitTime = new Date(postCreatedAt.getTime() + limit * 60 * 60 * 1000);

    const differ = limitTime.getTime() - now.getTime();

    const sec = Math.floor(differ / 1000) % 60;
    const min = Math.floor(differ / 1000 / 60) % 60;
    const hour = Math.floor(differ / 1000 / 60 / 60);

    elmHour.textContent = String(hour).padStart(2, "0");
    elmMin.textContent = String(min).padStart(2, "0");
    elmSec.textContent = String(sec).padStart(2, "0");

    const timeLimit = document.getElementById("timeLimit");
    const hideLimit =document.getElementById("hideLimit");
    if ( differ < 0 ) {
      timeLimit.style.display = "none";
      hideLimit.style.display = "block";
    }
  };

  setInterval(rewriteTime, 1000);


  if (typeof map == "undefined") {
    let map
    let marker
  }
  function initMap(){
    geocoder = new google.maps.Geocoder()

    map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: <%= @post.latitude %>, lng: <%= @post.longitube %> },
      zoom: 15,
    });

    marker = new google.maps.Marker({
      position: { lat: <%= @post.latitude %>, lng: <%= @post.longitube %> },
      map: map
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['API_KEY'] %>&libraries=places&callback=initMap" async defer></script>